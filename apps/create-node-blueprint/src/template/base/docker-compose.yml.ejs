version: '3.8'

services:
  app:
    container_name: <%= projectName %>-app
    build:
      context: .
      target: <%= process.env.NODE_ENV === 'production' ? 'runner' : 'builder' %>
    restart: unless-stopped
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes: 
      - .:/app
      - /app/node_modules
    networks:
      - <%= projectName %>-network
    healthcheck:
      test: wget --no-verbose --tries=1 --spider ${HEALTH_CHECK_URL} || exit 1
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 10s
    depends_on:
      <%_ if (database === 'postgres') { _%>
      postgres:
        condition: service_healthy
      <%_ } _%>
      <%_ if (database === 'mysql') { _%>
      mysql:
        condition: service_healthy
      <%_ } _%>
      <%_ if (database === 'mongodb') { _%>
      mongodb:
        condition: service_healthy
      <%_ } _%>

  <%_ if (database === 'postgres') { _%>
  postgres:
    image: postgres:<%= pgVersion || '16' %>-alpine
    container_name: <%= projectName %>-postgres
    restart: unless-stopped
    ports:
      - "5432:5432"
    env_file:
      - .env
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - <%= projectName %>-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
  <%_ } _%>
  <%_ if (database === 'mysql') { _%>
  mysql:
    image: mysql:<%= mysqlVersion || '8' %>
    container_name: <%= projectName %>-mysql
    restart: unless-stopped
    ports:
      - "3306:3306"
    env_file:
      - .env
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "${DB_HOST}", "-u", "${DB_USER}", "-p", "${DB_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
  <%_ } _%>
  <%_ if (database === 'mongodb') { _%>
  mongodb:
    image: mongo:latest
    container_name: <%= projectName %>-mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    env_file:
      - .env
    volumes:
      - mongodb-data:/data/db
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.runCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5
  <%_ } _%>

volumes:
<%_ if (database === 'postgres') { _%>
  postgres-data:
<%_ } _%>
<%_ if (database === 'mysql') { _%>
  mysql-data:
<%_ } _%>
<%_ if (database === 'mongodb') { _%>
  mongodb-data:
<%_ } _%>

networks: 
  <%= projectName %>-network:
    driver: bridge